# Config file for Klipper running on the PHIL pipetting robot.
# File created by Eirinn, 2021-09-08.
# Sections are copied from https://github.com/KevinOConnor/klipper/blob/master/config/generic-bigtreetech-octopus.cfg
# and https://github.com/bigtreetech/BIGTREETECH-OCTOPUS-V1.0/blob/master/Firmware/Klipper/Octopus%20klipper.cfg


[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_470017001950534841313020-if00
restart_method: command 

# the following 3 sections are for Moonraker
[pause_resume]

[display_status]

[virtual_sdcard]
path: ~/gcode_files

#enable sdcard_loop_begin and sdcard_loop_end commands
[sdcard_loop]

[printer]
kinematics: fivebar
max_velocity: 6000
max_accel: 6000
max_z_velocity: 10
inner_arm_length: 65
outer_arm_length: 145
inner_distance: 45.0957 # mm between the L/R steppers
# describe where the toolhead is mounted in relation to the left or right elbow.
# the default values describe a toolhead which is mounted precisely on the endpoint.
toolhead_attached_to: left # left or right elbow. Default: left.
# offset angle: Positive means the toolhead is positioned CCW from the endpoint (w.r.t the elbow).
# Defaults to 0.
toolhead_offset_angle: 0.068870692 
# distance: this is the length from the elbow to the toolhead. If None, it will default to outer_arm_length.
toolhead_to_elbow_length: 145.344

# [homing_override]
# gcode:
#   # sensorless homing must be done at the same run and hold currents.
#   {% set HOME_CUR = 1.0 %}
#   # get the configured run/hold currents
#   {% set driver_config = printer.configfile.settings['tmc2209 stepper_left'] %}
#   {% set RUN_CUR = driver_config.run_current %} 
#   {% set HOLD_CUR = driver_config.hold_current %}
#   # set the currents
#   SET_TMC_CURRENT STEPPER=stepper_left CURRENT={HOME_CUR} HOLDCURRENT={HOME_CUR}
#   SET_TMC_CURRENT STEPPER=stepper_right CURRENT={HOME_CUR} HOLDCURRENT={HOME_CUR}
#   G28 Z ;home z first for safety
#   G28 X Y 
#   G90 ; absolute mode
#   G1 X-43 Y93 F6000; move to the front left corner
#   ;G92 XY ; set new offset
#   # set the hold current for the steppers. This has to be done after homing.
#   SET_TMC_CURRENT STEPPER=stepper_left CURRENT={RUN_CUR} HOLDCURRENT={HOLD_CUR}
#   SET_TMC_CURRENT STEPPER=stepper_left CURRENT={RUN_CUR} HOLDCURRENT={HOLD_CUR}


[homing_override]
axes: xy
gcode:
  G28 Z; home Z first for safety
  G28 X Y
  G90 ; absolute mode
  G1 X14 Y89 F6000; move to the front left corner
  ;G92 XY ; set new offset

###### Steppers #####

# Driver0
[stepper_left] 
step_pin: PF13
dir_pin: !PF12
enable_pin: !PF14
microsteps: 16
gear_ratio: 1:1
endstop_pin: !PG6
# endstop_pin: tmc2209_stepper_left:virtual_endstop
position_endstop: 4.68329 # close to 270 degrees. This is a post-calibration value. 
# position_endstop: 4.71239
position_max: 4.68329
position_min: 1.48353 # 88 degrees # 1.5708 # 90 degrees
homing_positive_dir: true # we have to go positive (counterclockwise) to get to the endstop
homing_speed: 3 # radians per second?
# homing_speed: 1 # radians per second?
safe_home_angle: 2.35 # 135 degrees
homing_retract_dist: 0 # 0.0872 # 5 degrees


[tmc2209 stepper_left]
uart_pin: PC4
# diag_pin: PG6 # remember to connect jumper on octopus board!
driver_SGTHRS: 60 # 255 is most sensitive value, 0 is least sensitive
run_current: 1.0
hold_current: 0.5
stealthchop_threshold: 999999

# Driver1
[stepper_right]
step_pin: PG0
dir_pin: !PG1
enable_pin: !PF15
microsteps: 16
gear_ratio: 1:1
# rotation_distance: 360 # degrees. Temporary!
endstop_pin: !PG9
# endstop_pin: tmc2209_stepper_right:virtual_endstop
position_endstop: -1.5408 # close to -90 degrees. Post calibration value. 
# position_endstop: -1.5708
position_min: -1.5408
position_max: 1.65806 # 95 degrees # 1.5708 # +90 degrees
homing_positive_dir: false # we have to go negative (clockwise) to get to the endstop
homing_speed: 3 # radians per second?
safe_home_angle: 0.785 # 45 degrees
homing_retract_dist: 0 #0.0872 # 5 degrees

[tmc2209 stepper_right]
uart_pin: PD11
# diag_pin: PG9 # remember to connect jumper on octopus board!
driver_SGTHRS: 60  # 255 is most sensitive value, 0 is least sensitive
run_current: 1.0
hold_current: 0.5
stealthchop_threshold: 999999

# Driver 2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
microsteps: 16
rotation_distance: 12 # mm per rev, extracted from the matlab code
endstop_pin: !PG10
position_endstop: 24
position_max: 24 # slightly beyond the endstop
position_min: 0 # need to test
homing_speed: 8 # mm per second
second_homing_speed: 2
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: PC6
#diag_pin: PG10
run_current: 0.8
hold_current: 0.5
stealthchop_threshold: 999999

# Driver 3
[stepper_z1]
step_pin: PG4
dir_pin: PC1
enable_pin: !PA0
microsteps: 16
rotation_distance: 12 # as above
endstop_pin: !PG11
#   If an endstop_pin is defined for the additional stepper then the
#   stepper will home until the endstop is triggered. Otherwise, the
#   stepper will home until the endstop on the primary stepper for the
#   axis is triggered.

[tmc2209 stepper_z1]
uart_pin: PC7
#diag_pin: PG11
run_current: 0.8
hold_current: 0.5
stealthchop_threshold: 999999


############### PUMPS ################
# Note: the ! before the dir_pin reverse the direction of the pump with respect to the way its wired.

[manual_stepper pump0]
step_pin: PF9
dir_pin: !PF10
enable_pin: !PG2
microsteps: 16
rotation_distance: 10.5 # uL per revolution

[tmc2209 manual_stepper pump0]
uart_pin: PF2
run_current: 1.5
hold_current: 0.5

[manual_stepper pump1]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
microsteps: 16
rotation_distance: 10.5 # uL per revolution

[tmc2209 manual_stepper pump1]
uart_pin: PE4
run_current: 1.5
hold_current: 0.5

[manual_stepper pump2]
step_pin: PE2
dir_pin: !PE3
enable_pin: !PD4
microsteps: 16
rotation_distance: 10.5 # uL per revolution

[tmc2209 manual_stepper pump2]
uart_pin: PE1
run_current: 1.5
hold_current: 0.5

[manual_stepper pump3]
step_pin: PE6
dir_pin: !PA14
enable_pin: !PE0
microsteps: 16
rotation_distance: 10.5 # uL per revolution

[tmc2209 manual_stepper pump3]
uart_pin: PD3
run_current: 1.5
hold_current: 0.5





[fan_generic fan0]
pin: PA8

##### PUMP MACROS #####
## usage example: 
# p0 v3 f5 ;uses pump0 to dispense 3 ul at a speed of 2ul/second.
# default speed is 2ul/sec

[gcode_macro P0]
gcode:
  manual_stepper stepper=pump0 set_position=0 move={params.V} speed={params.F|default(2)|float}

[gcode_macro P1]
gcode:
  manual_stepper stepper=pump1 set_position=0 move={params.V} speed={params.F|default(2)|float}

[gcode_macro P2]
gcode:
  manual_stepper stepper=pump2 set_position=0 move={params.V} speed={params.F|default(2)|float}

[gcode_macro P3]
gcode:
  manual_stepper stepper=pump3 set_position=0 move={params.V} speed={params.F|default(2)|float}




[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  CANCEL_PRINT_BASE
  
